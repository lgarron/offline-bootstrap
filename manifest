#!/usr/bin/python

import argparse
import datetime
import re
import sys
import textwrap

# This script modifies the manifest file to include a unique timestamp on every upload (so that browsers will look for a new version).
# See http://diveintohtml5.info/offline.html

parser = argparse.ArgumentParser(description='Update a cache manifest file with a unique date/time (so that browsers will look for a new version), or revert it to a template for version control.')

group = parser.add_mutually_exclusive_group(required=True)

parser.add_argument(
  '--concise', '-c',
  action='store_true',
  default=False,
  help="concise output."
)

parser.add_argument(
  '--silent', '-s',
  action='store_true',
  default=False,
  help="Don't print output. Overrides --concise."
)

group.add_argument(
  '--update', '-u',
  action='store_true',
  default=False,
  help="Update the cache manifest with a unique date and time."
)

group.add_argument(
  '--revert', '-r',
  action='store_true',
  default=False,
  help="Revert the cache manifest."
)

parser.add_argument(
  'file',
  type=argparse.FileType('rb+'),
  help='Cache manifest filename.'
)


args = parser.parse_args()

contents = args.file.read()

if (not args.silent):
  print("------------------------")

if args.update:
  dateString = datetime.datetime.now().strftime("%c")
  if not args.silent:
    print("[manifest] Updating cache manifest file: %s" % args.file.name)
    print("[manifest] New date: %s" % dateString)
elif args.revert:
  dateString = "[DATE]"
  if not args.silent:
    print("[manifest] Reverting cache manifest file: %s" % args.file.name)
else:
  assert False

new_contents = re.sub(r"Uploaded on .*", "Uploaded on %s" % dateString, contents)

if (not args.silent) and (not args.concise):
  sys.stderr.write("[manifest] New contents:\n\n")
  sys.stderr.write(new_contents)
  sys.stderr.write("\n")

if (not args.silent):
  print("------------------------")

args.file.seek(0)
args.file.truncate()
args.file.write(new_contents)

args.file.close()